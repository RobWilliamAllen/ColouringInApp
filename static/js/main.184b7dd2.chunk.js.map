{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ColorTiles","className","onMouseOver","this","props","changeBackground","onClick","React","Component","App","state","backgroundColor","Array","fill","bind","e","target","style","background","Math","floor","random","toString","forceUpdate","test","navigator","userAgent","alert","map","color","index","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAGMA,E,4JAEJ,WAEE,OACI,8BACE,wBAAQC,UAAU,SACVC,YAAaC,KAAKC,MAAMC,iBACxBC,QAASH,KAAKC,MAAME,gB,GARbC,IAAMC,WAqDhBC,E,kDArCZ,WAAYL,GAAQ,IAAD,8BAChB,cAAMA,IACDM,MAAQ,CACXC,gBAAiBC,MAAM,KAAMC,QAEhC,EAAKP,QAAU,EAAKA,QAAQQ,KAAb,gBALE,E,oDAQpB,SAAiBC,GACfA,EAAEC,OAAOC,MAAMC,WAAa,IAAMC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,M,qBAGhF,WACCnB,KAAKoB,gB,oBAGN,WAAU,IAAD,OAMP,MAJG,iEAAiEC,KAAKC,UAAUC,YAC/EC,MAAM,8DAKR,qBAAK1B,UAAU,UAAf,SAEIE,KAAKO,MAAMC,gBAAgBiB,KAAI,SAACC,EAAOC,GAAR,OAC/B,cAAC,EAAD,CAEEzB,iBAAkB,EAAKA,iBACvBC,QAAS,EAAKA,SAFTwB,EAAQ,IAAMC,KAAKC,gB,GA9BlBzB,IAAMC,WCLTyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.184b7dd2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass ColorTiles extends React.Component { \n  \n  render() {   \n        \n    return (             \n        <div>     \n          <button className=\"square\"  \n                  onMouseOver={this.props.changeBackground} \n                  onClick={this.props.onClick} />        \n        </div>\n    );\n  };\n};\n\nclass App extends React.Component {\n  \n   constructor(props) {\n      super(props);\n      this.state = {\n        backgroundColor: Array(1000).fill(),\n      };      \n     this.onClick = this.onClick.bind(this);       \n   }      \n  \n  changeBackground(e) {\n    e.target.style.background = '#' + Math.floor(Math.random()*16777215).toString(16);\n  } \n  \n  onClick() {\n   this.forceUpdate();\n  }   \n  \n  render() {   \n    \n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){\n        alert(\"Please use the desktop site, as this demo requires a mouse\")\n    };\n    \n    return (\n     \n      <div className=\"squares\">       \n        { \n          this.state.backgroundColor.map((color, index) => \n          <ColorTiles \n            key={index + '-' + Date.now()} \n            changeBackground={this.changeBackground} \n            onClick={this.onClick} />) \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}